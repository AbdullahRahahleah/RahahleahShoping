<!--  bean xml file for dispatcher servlet which mentioned in web.xml -->
<!--  Naming convention for this XML file is important where it should (servletname-servlet.xml) -->


<!-- those are named (namespaces) -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:wf="http://www.springframework.org/schema/webflow-config"	
		
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context.xsd  
   http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc.xsd  
    http://www.springframework.org/schema/webflow-config
   http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd  
   ">
   <!--  To scan every component  -->
	<context:component-scan base-package="Rahahleah.RahShopping"></context:component-scan>
	<context:component-scan base-package="Rahahleah.shoppingbackend"></context:component-scan>
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--  here it will go to the constructur of the mentioned class above to set inject the 
		dependencies (set the attributes using setters in the class)   -->
		<!--  we have already setprefix and setsuffix in the class above -->
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>

	</bean>
	<!--  id must be multipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver"	
	>
	
	
	</bean>
	
	<!--  Loading static resourcse for MVC  -->
	<mvc:annotation-driven/>
	<mvc:resources location=" /assets/" mapping="resources/**"></mvc:resources>
	
	
	
	<!--Webflow configuration  -->
	<!--  Entry point for the flow -->
	<!--  two stars will be replaced by base path to get the required flow-->
	<wf:flow-executor id="flowExecutor"/>
	<wf:flow-registry id="flowRegistry" base-path="/WEB-INF/views/flows"
		flow-builder-services="flowBuilderServices">
		<wf:flow-location-pattern value="/**/*-flow.xml"/>
	</wf:flow-registry> 
	<!--  to customize the flow regiestry  -->
	<wf:flow-builder-services id="flowBuilderServices"
	 view-factory-creator="viewFactoryCreator"	/>
	<!-- this handler adapter is the bridge between dispatcherServlet and the flow executor, handling requests and mainpulating the flow based on those requests -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor"></property>
	</bean>
	
	<!--  DispatcherServlet knows how dispatch requests by consulting with one or more handler mappings. for web flows, flowhandlermapping helps dispatcherServlet know to send flow requests to the flowHandlerAdapter -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="flowRegistry" ref="flowRegistry"/> 
	</bean>
	
	<!--  for resolving views fow web flow, this bean will point to the view resolved -->
	<bean id="viewFactoryCreator"
		class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
		<property name="viewResolvers" ref="viewResolver"/>			
	</bean>
</beans>