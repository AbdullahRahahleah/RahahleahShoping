<!--  bean xml file for dispatcher servlet which mentioned in web.xml -->
<!--  Naming convention for this XML file is important where it should (servletname-servlet.xml) -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"	
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context.xsd  
   http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc.xsd  
   ">
   <!--  To scan every component  -->
	<context:component-scan base-package="Rahahleah.RahShopping"></context:component-scan>
	<context:component-scan base-package="Rahahleah.shoppingbackend"></context:component-scan>
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--  here it will go to the constructur of the mentioned class above to set inject the 
		dependencies (set the attributes using setters in the class)   -->
		<!--  we have already setprefix and setsuffix in the class above -->
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>

	</bean>
	<!--  id must be multipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver"	
	>
	
	
	</bean>
	
	<!--  Loading static resourcse for MVC  -->
	<mvc:annotation-driven/>
	<mvc:resources location=" /assets/" mapping="resources/**"></mvc:resources>
	
	
</beans>